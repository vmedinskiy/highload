// Code generated by ogen, DO NOT EDIT.

package generated

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// GetUser implements getUser operation.
	//
	// Get user details by id.
	//
	// GET /user/get/{id}
	GetUser(ctx context.Context, params GetUserParams) (GetUserRes, error)
	// LoginUser implements loginUser operation.
	//
	// Simplified user auth process post userID receive token.
	//
	// POST /login
	LoginUser(ctx context.Context, req *LoginInput) (LoginUserRes, error)
	// RegisterUser implements registerUser operation.
	//
	// New user register.
	//
	// POST /user/register
	RegisterUser(ctx context.Context, req OptUserRegister) (RegisterUserRes, error)
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h   Handler
	sec SecurityHandler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, sec SecurityHandler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		sec:        sec,
		baseServer: s,
	}, nil
}
