{
  "openapi": "3.0.3",
  "info": {
    "title": "title",
    "version": "v0.1.0"
  },
  "paths": {
    "/octetStreamBinaryStringSchema": {
      "get": {
        "operationId": "octetStreamBinaryStringSchema",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/textPlainBinaryStringSchema": {
      "get": {
        "operationId": "textPlainBinaryStringSchema",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/octetStreamEmptySchema": {
      "get": {
        "operationId": "octetStreamEmptySchema",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/octet-stream": {}
            }
          }
        }
      }
    },
    "/multipleGenericResponses": {
      "get": {
        "operationId": "multipleGenericResponses",
        "responses": {
          "200": {
            "description": "int",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "nullable": true
                }
              }
            }
          },
          "201": {
            "description": "resp2",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          }
        }
      }
    },
    "/anyContentTypeBinaryStringSchema": {
      "get": {
        "operationId": "anyContentTypeBinaryStringSchema",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/anyContentTypeBinaryStringSchemaDefault": {
      "get": {
        "operationId": "anyContentTypeBinaryStringSchemaDefault",
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/intersectPatternCode": {
      "get": {
        "operationId": "intersectPatternCode",
        "description": "If a response is defined using an explicit code, the explicit code definition takes precedence over the range definition for that code.",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "test",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "2XX": {
            "description": "test",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          }
        }
      }
    },
    "/combined": {
      "get": {
        "operationId": "combined",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "200",
                "2XX",
                "5XX",
                "default"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200: JSON object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "ok"
                  ],
                  "properties": {
                    "ok": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "2XX": {
            "description": "2XX: JSON integer",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "5XX": {
            "description": "5XX: JSON boolean",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "default": {
            "description": "default: JSON array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/headers200": {
      "get": {
        "operationId": "headers200",
        "responses": {
          "200": {
            "description": "test",
            "headers": {
              "X-Test-Header": {
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/headersDefault": {
      "get": {
        "operationId": "headersDefault",
        "responses": {
          "default": {
            "description": "test",
            "headers": {
              "X-Test-Header": {
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/headersPattern": {
      "get": {
        "operationId": "headersPattern",
        "responses": {
          "4XX": {
            "description": "test",
            "headers": {
              "X-Test-Header": {
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/headersCombined": {
      "get": {
        "operationId": "headersCombined",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "200",
                "default",
                "4XX"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "test",
            "headers": {
              "X-Test-Header": {
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "description": "test",
            "headers": {
              "X-Test-Header": {
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "test",
            "headers": {
              "X-Test-Header": {
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/headersJSON": {
      "get": {
        "operationId": "headersJSON",
        "responses": {
          "200": {
            "description": "test",
            "headers": {
              "X-Json-Header": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              },
              "X-Json-Custom-Header": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/optionalHeaders": {
      "get": {
        "operationId": "optionalHeaders",
        "description": "https://github.com/ogen-go/ogen/issues/822",
        "responses": {
          "200": {
            "description": "test",
            "headers": {
              "X-Required": {
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Optional": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/streamJSON": {
      "post": {
        "operationId": "streamJSON",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "x-ogen-json-streaming": true,
                "schema": {
                  "$ref": "#/components/schemas/QueryData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "QueryData": {
        "type": "array",
        "items": {
          "type": "number"
        }
      },
      "Error": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "required": [
          "id",
          "username",
          "role"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "username": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "admin",
              "user",
              "bot"
            ]
          },
          "friends": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      }
    }
  }
}